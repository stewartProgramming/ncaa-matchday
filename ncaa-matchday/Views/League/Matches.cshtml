@using ncaa_matchday.Models.LeagueModels
@using ncaa_matchday.Models.Scoreboard
@model List<Matches>

@{
    ViewData["Title"] = $"NCAA {Model.Select(x => x.Sport).Distinct().First()} Matches of the Day";
    string logoLink = "https://i.turner.ncaa.com/sites/default/files/images/logos/schools/bgl/";
}

<div class="dateForm" style="text-align:center">
    <form asp-controller="League" asp-action="Matches" name="Date" id="date" asp-route-leagueLink="@Model.Select(x => x.Sport).Distinct().First()">
        <input type="date" name="date" id="date" onchange="Date.submit().toString()" style="align-content:center" />
    </form>
</div>

    @{
        var testingz = Model.SelectMany(x => x.Games).Select(y => y.GameState).Distinct();
        var sexes = Model.Select(x => x.Sex).Distinct();
        var divisions = Model.Select(x => x.Division).Distinct();
    }

    @foreach (string sex in sexes)
    {
        @foreach (string division in divisions)
        {
            var matches = Model.Where(x => x.Division == division && x.Sex == sex);
            var liveMatchCount = matches.SelectMany(x => x.Games).Where(y => y.GameState == "live").Count();
            var totalMatchCount = matches.SelectMany(x => x.Games).Count();

            <button type="button" class="collapsible">
                @(sex) @(division[0] + division.Split(' ').Last()) - <span style="color:red;text-align:right">@liveMatchCount</span>/@totalMatchCount
            </button>
            <div class="content">
            <table align="center">
                <tr>
                    <td style="text-align:center;">
                    </td>
                </tr>
            @foreach (var match in Model.Where(x => x.Division == division && x.Sex == sex))
            {
                if (match.Games != null)
                {
                    foreach (var game in match.Games)
                    {
                        ScoreboardTeam homeTeam = game.Home;
                        string homeLogoLink = logoLink + homeTeam.Names.Seo + ".svg";
                        ScoreboardTeam awayTeam = game.Away;
                        string awayLogoLink = logoLink + awayTeam.Names.Seo + ".svg";

                        int homeScore;
                        if (!string.IsNullOrEmpty(homeTeam.Score) && int.TryParse(homeTeam.Score, out int homeResultParsed) == true)
                            homeScore = homeResultParsed;
                        else
                            homeScore = 0;

                        int awayScore;
                        if (!string.IsNullOrEmpty(awayTeam.Score) && int.TryParse(awayTeam.Score, out int awayResultParsed) == true)
                            awayScore = awayResultParsed;
                        else
                            awayScore = 0;

                        string startTime = game.StartTime.TrimStart('0');
                        if (game.FinalMessage == "FINAL" || game.GameState == "final")
                        {
                            startTime = "FT";
                        }
                        else if (game.GameState == "suspended")
                            {
                                startTime = "Suspended";
                            }
                            else if (game.GameState == "live")
                        {
                            string[] contestClockSplit = game.ContestClock.Split(':');
                            if (contestClockSplit.Last() == "00")
                            {
                                startTime = contestClockSplit.First();
                            }
                            else
                            {
                                startTime = (int.Parse(contestClockSplit.First()) + 1).ToString();
                            }
                        }
                        else
                        {
                            startTime = startTime.Split(' ').First();
                        }

                        string gameDate = DateTime.Parse(game.StartDate).ToString("MM/dd/yy").TrimStart('0');
                        string gameUrlNum = game.Url.Split('/').Last();


                        <tr>
                            <td>
                                <p style="text-align:center;padding-right:10px">
                                    @gameDate<br />
                                        @if (game.GameState == "live")
                                        {
                                            <span style="color:red">@startTime</span>
                                        }
                                        else
                                        {
                                            @startTime
                                        }
                                </p>
                            </td>
                            <td>
                                <a asp-controller="Match" asp-action="Details" asp-route-gameId="@gameUrlNum" style="text-decoration:none;color:black">
                                    <p>
                                        <img src="@homeLogoLink" width="25" height="25" />
                                        @if (homeScore > awayScore && game.GameState != "live")
                                        {
                                            <b>
                                                @homeTeam.Names.Short
                                                <span style="float:right;padding-left:25px">@homeTeam.Score</span>
                                            </b>
                                        }
                                        else
                                        {
                                            @homeTeam.Names.Short
                                            if (game.GameState == "live")
                                            {
                                                <span style="float:right;padding-left:25px;color:red">@homeTeam.Score</span>
                                            }
                                            else
                                            {
                                                <span style="float:right;padding-left:25px">@homeTeam.Score</span>
                                            }
                                        }
                                        <br />
                                        <img src="@awayLogoLink" height="25" />
                                        @if (awayScore > homeScore && game.GameState != "live")
                                        {
                                            <b>
                                                @awayTeam.Names.Short
                                                <span style="float:right;padding-left:25px">@awayTeam.Score</span>
                                            </b>
                                        }
                                        else
                                        {
                                            @awayTeam.Names.Short
                                            if (game.GameState == "live")
                                            {
                                                <span style="float:right;padding-left:25px;color:red">@awayTeam.Score</span>
                                            }
                                            else
                                            {
                                                <span style="float:right;padding-left:25px">@awayTeam.Score</span>
                                            }
                                        }
                                    </p>
                                </a>
                            </td>
                        </tr>
                    }
                }
            }
            </table>
        </div>
            
        }
    }
    <script>
        var coll = document.getElementsByClassName("collapsible");
        var i;

        for (i = 0; i < coll.length; i++) {
          coll[i].addEventListener("click", function() {
            this.classList.toggle("active");
            var content = this.nextElementSibling;
            if (content.style.display === "block") {
              content.style.display = "none";
            } else {
              content.style.display = "block";
            }
          });
        }
    </script>
    <style>
        .collapsible{
            color: black;
            background-color: transparent;
            cursor: pointer;
            padding: 5px;
            width: 100%;
            border: none;
            outline: none;
            font-size: 15px;
            text-align: center;
        }
        .active .collapsible:hover{
            background-color: #555;
        }
        .content{
            padding: 0 18px;
            display: none;
            overflow: hidden;
            background-color: #f1f1f1;
        }
    </style>
