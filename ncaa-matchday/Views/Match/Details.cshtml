@using ncaa_matchday.Models.MatchModels
@using ncaa_matchday.Models.MatchModels.Matchday.Models.NCAA
@model NCAA_Details

@{
    ViewData["Title"] = $"{Model.GameInfo.meta.title}";

    string logoLink = $"https://i.turner.ncaa.com/sites/default/files/images/logos/schools/bgl/";

    Team? homeTeam = new Team(
        Model.GameInfo.teams.Where(x => x.teamId.ToString() == Model.GameInfo.meta.teams[0].id).First(),
        Model.GameInfo.meta.teams[0]
    );

    Team? awayTeam = new Team(
        Model.GameInfo.teams.Where(x => x.teamId.ToString() == Model.GameInfo.meta.teams[1].id).First(), 
        Model.GameInfo.meta.teams[1]
    );

    string score = homeTeam.playerTotals.goals + " - " + awayTeam.playerTotals.goals;

    List<PlayStat>? playStats = Model.PlayByPlay.Periods
        .SelectMany(x => x.PlayStats)
        .Where(x => x.HomeText.Contains("Cardyellow(") || x.HomeText.Contains("Cardred(") || x.HomeText.Contains("Goal (") || x.HomeText.Contains("Goal by") || x.HomeText.Contains("GOAL")
        || x.VisitorText.Contains("Cardyellow(") || x.VisitorText.Contains("Cardred(") || x.VisitorText.Contains("Goal (") || x.VisitorText.Contains("Goal by") || x.VisitorText.Contains("GOAL"))
        .OrderBy(x => x.Time)
        .ToList();
}

<meta http-equiv="refresh" content="40">
<script src="https://kit.fontawesome.com/9cb16b74f0.js" crossorigin="anonymous"></script>

<table align="center">
    <tr style="text-align:center">
        <th>
            <p>
                <img src="@logoLink@homeTeam.seoName@(".svg")" width="150" />
            </p>
            <p style="color:@homeTeam.color">
                <b>
                    @homeTeam.shortName @homeTeam.nickName
                </b>
            </p>
        </th>
        <th style="padding-left:20px;padding-right:20px">
            <p style="font-size:xx-large">
                @score
            </p>
            <p style="font-size:large">
                @if (Model.GameInfo.meta.status == "Final")
                {
                    @("FT")
                }
                else
                {
                    if (Model.GameInfo.meta.seconds == "00")
                    {
                        @(Model.GameInfo.meta.minutes + "'")
                    }
                    else
                    {
                        var minPlusOne = int.Parse(Model.GameInfo.meta.minutes) + 1;
                        <span style="color:red;animation: fadeIn ease 10s">
                            @(minPlusOne + "'")
                        </span>
                    }
                }
            </p>
        </th>
        <th>
            <p>
                <img src="@logoLink@awayTeam.seoName@(".svg")" width="150" />
            </p>
            <p style="color:@awayTeam.color">
                <b>
                    @awayTeam.shortName @awayTeam.nickName
                </b>
            </p>
        </th>
    </tr>
    <tr>

    </tr>
    <tr style="text-align:center;">
        <th>
            @homeTeam.totalStats.shots<br />
            @homeTeam.totalStats.shotsOnGoal<br />
            @homeTeam.totalStats.saves<br />
            @homeTeam.totalStats.corners<br />
            @homeTeam.totalStats.offsides<br />
            @homeTeam.totalStats.fouls<br />
            @homeTeam.playerTotals.yellowCards<br />
            @homeTeam.playerTotals.redCards
        </th>
        <th>
            Shots<br />
            On goal<br />
            Saves<br />
            Corners<br />
            Offsides<br />
            Fouls<br />
            Yellow<br />
            Red
        </th>
        <th>
            @awayTeam.totalStats.shots<br />
            @awayTeam.totalStats.shotsOnGoal<br />
            @awayTeam.totalStats.saves<br />
            @awayTeam.totalStats.corners<br />
            @awayTeam.totalStats.offsides<br />
            @awayTeam.totalStats.fouls<br />
            @awayTeam.playerTotals.yellowCards<br />
            @awayTeam.playerTotals.redCards
        </th>
    </tr>
    <tr>
        <th style="padding-top:20px">

        </th>
    </tr>
    <tr style="text-align:center;">
        <th >
            @foreach (var item in playStats.Where(x => !string.IsNullOrEmpty(x.HomeText)))
            {
                var itemTime = string.Empty;
                var timeSplit = item.Time.Split(':');
                if (timeSplit[0] != "00")
                {
                    itemTime = timeSplit[0].TrimStart('0') + ':' + timeSplit[1];
                    if (itemTime.Split(':')[1] != "00")
                    {
                        itemTime = (int.Parse(itemTime.Split(':')[0]) + 1).ToString() + "'";
                    }
                    else
                    {
                        itemTime = itemTime.Split(':')[0] + "'";
                    }
                }
                else
                {
                    itemTime = "1'";
                }

                string playerName = string.Empty;
                string assistText = string.Empty;
                var threeCharAbbr = homeTeam.sixCharAbbr.Substring(0, 3);

                if (item.HomeText.Contains($"by {threeCharAbbr}"))
                {
                    playerName = item.HomeText.Split($"by {threeCharAbbr}").Last();
                }
                else if (item.HomeText.Contains("by") && !item.HomeText.Contains(threeCharAbbr))
                {
                    playerName = item.HomeText.Split("by").Last();
                }

                if (playerName.Contains("Assist by"))
                {
                    assistText = $"{playerName.Split("Assist by").Last()}";
                    playerName = playerName.Split("Assist by").First();
                }

                if (item.HomeText.Contains("Goal (") || item.HomeText.Contains("Goal by") || item.HomeText.Contains("GOAL"))
                {
                    @(itemTime) <i class="fas fa-futbol" style="color:lawngreen"></i> @(playerName) <br style="margin-top:0" />
                    if (!string.IsNullOrEmpty(assistText))
                    {
                        <span style="font-size:small">
                            @(assistText)
                            <br />
                        </span>
                    }
                }
                else if (item.HomeText.Contains("yellow"))
                {
                    @(itemTime) <i class="fas fa-square" style="color:yellow"></i> @(playerName) <br />
                }
                else if (item.HomeText.Contains("red"))
                {
                    @(itemTime) <i class="fas fa-square" style="color:red"></i> @(playerName) <br />
                }
            }
        </th>
        <th>

        </th>
        <th style">
            @foreach (var item in playStats.Where(x => !string.IsNullOrEmpty(x.VisitorText)))
            {
                var itemTime = string.Empty;
                var timeSplit = item.Time.Split(':');
                if (timeSplit[0] != "00")
                {
                    itemTime = timeSplit[0].TrimStart('0') + ':' + timeSplit[1];
                    if (itemTime.Split(':')[1] != "00")
                    {
                        itemTime = (int.Parse(itemTime.Split(':')[0]) + 1).ToString() + "'";
                    }
                    else
                    {
                        itemTime = itemTime.Split(':')[0] + "'";
                    }
                }
                else
                {
                    itemTime = "1'";
                }

                string playerName = string.Empty;
                string assistText = string.Empty;
                var threeCharAbbr = awayTeam.sixCharAbbr.Substring(0, 3);

                if (item.VisitorText.Contains($"by {threeCharAbbr}"))
                {
                    playerName = item.VisitorText.Split($"by {threeCharAbbr}").Last();
                }
                else if (item.VisitorText.Contains("by") && !item.VisitorText.Contains(threeCharAbbr))
                {
                    playerName = item.VisitorText.Split("by").Last();
                }

                if (playerName.Contains("Assist by"))
                {
                    assistText = $"assist by {playerName.Split("Assist by").Last()}";
                    playerName = playerName.Split("Assist by").First();
                }

                var abbrCheck = playerName.Trim().Substring(0, 3);
                if (abbrCheck.All(x => char.IsUpper(x)))
                {
                    playerName = playerName.Split(abbrCheck).Last();
                }

                if (playerName.Contains("and"))
                {
                    playerName = playerName.Split("and").First();
                }

                if (item.VisitorText.Contains("Goal (") || item.VisitorText.Contains("Goal by") || item.VisitorText.Contains("GOAL"))
                {
                    @(playerName) <i class="fas fa-futbol" style="color:lawngreen"></i> @(itemTime) <br />
                    if (!string.IsNullOrEmpty(assistText))
                    {
                        <span style="font-size:small">
                            @(assistText)
                            <br />
                        </span>
                    }
                }
                else if (item.VisitorText.Contains("yellow"))
                {
                    @(playerName) <i class="fas fa-square" style="color:yellow"></i> @(itemTime) <br />
                }
                else if (item.VisitorText.Contains("red"))
                {
                    @(playerName) <i class="fas fa-square" style="color:red"></i> @(itemTime) <br />
                }
            }
        </th>
    </tr>
</table>
