@using ncaa_matchday.Models.MatchModels
@using ncaa_matchday.Models.MatchModels.Matchday.Models.NCAA
@model NCAA_Details

@{
    ViewData["Title"] = $"{Model.GameInfo.meta.title}";

    string logoLink = $"https://i.turner.ncaa.com/sites/default/files/images/logos/schools/bgl/";

    Team? homeTeam = new Team(
        Model.GameInfo.teams.Where(x => x.teamId.ToString() == Model.GameInfo.meta.teams[0].id).First(),
        Model.GameInfo.meta.teams[0]
    );

    Team? awayTeam = new Team(
        Model.GameInfo.teams.Where(x => x.teamId.ToString() == Model.GameInfo.meta.teams[1].id).First(),
        Model.GameInfo.meta.teams[1]
    );
}

<script src="https://kit.fontawesome.com/9cb16b74f0.js" crossorigin="anonymous"></script>

<table class="table" align="center" style="width:auto">
    <thead>
        <tr style="text-align:center">
            <th>
                <p style="text-align:center">
                    <img src="@logoLink@homeTeam.seoName@(".svg")" width="150" />
                </p>
                <p style="text-align:center;color:@homeTeam.color">
                    <b>
                        @homeTeam.shortName @homeTeam.nickName
                    </b>
                </p>
            </th>
            <th>
                <p style="text-align:center; font-size:xx-large">
                    @homeTeam.playerTotals.goals - @awayTeam.playerTotals.goals
                </p>
                <p style="text-align:center;font-size:medium">
                    @if (Model.GameInfo.meta.status == "Final")
                    {
                        @("FT")
                    }
                    else
                    {
                        @($"{Model.GameInfo.meta.minutes}:{Model.GameInfo.meta.seconds} (last updated)")
                    }
                </p>
            </th>
            <th>
                <p style="text-align:center">
                    <img src="@logoLink@awayTeam.seoName@(".svg")" width="150" />
                </p>
                <p style="text-align:center;color:@awayTeam.color">
                    <b>
                        @awayTeam.shortName @awayTeam.nickName
                    </b>
                </p>
            </th>
            <th></th>
        </tr>
    </thead>
</table>



@* <table align="center" style="float:left;width:30%">
    <thead>
        @foreach (var playStat in Model.PlayByPlay.Periods.SelectMany(x => x.PlayStats))
        {
            <tr>
                <td>
                    @(playStat.HomeText)
                </td>
            </tr>
        }
    </thead>
</table> *@

<table style="float:left;width:30%">
    <tr>
        <th style="text-align:left">
            @foreach (var item in Model.PlayByPlay.Periods.SelectMany(x => x.PlayStats).Where(x => !string.IsNullOrEmpty(x.HomeText)))
            {
                <p>
                    @{
                        var itemTime = string.Empty;
                        var timeSplit = item.Time.Split(':');
                        if (timeSplit[0] != "00")
                        {
                            itemTime = $"{timeSplit[0].TrimStart('0')}:{timeSplit[1]}";
                            if (itemTime.Split(':')[1] != "00")
                                itemTime = (int.Parse(itemTime.Split(':')[0]) + 1).ToString() + "'";
                            else
                                itemTime = itemTime.Split(':')[0] + "'";
                        }
                        else
                        {
                            itemTime = "1'";
                        }
                        var playerName = item.HomeText.Split("by").Last();
                        if (item.HomeText.Contains("Goal ("))
                        {
                            @(itemTime) <i class='fas fa-futbol' style="color:lawngreen"></i> @(playerName)
                        }
                        else if (item.HomeText.Contains("Cardyellow("))
                        {
                            @(itemTime) <i class="fas fa-square" style="color:yellow"></i> @(playerName)
                        }
                        else if (item.HomeText.Contains("Cardred("))
                        {
                            @(itemTime) <i class="fas fa-square" style="color:red"></i> @(playerName)
                        }
                    }
                </p>
            }
        </th>
    </tr>
</table>
<table align="center" style="width:20%;float:left">
    <tbody>
        <tr style="text-align:center">
            <td>
                @homeTeam.totalStats.shots<br />
                @homeTeam.totalStats.shotsOnGoal<br />
                @homeTeam.totalStats.saves<br />
                @homeTeam.totalStats.corners<br />
                @homeTeam.totalStats.offsides<br />
                @homeTeam.totalStats.fouls<br />
                @homeTeam.playerTotals.yellowCards<br />
                @homeTeam.playerTotals.redCards
            </td>
            <td>
                <b>
                    Shots<br />
                    Shots on goal<br />
                    Goalkeeper saves<br />
                    Corners<br />
                    Offsides<br />
                    Fouls<br />
                    Yellow cards<br />
                    Red cards
                </b>
            </td>
            <td>
                @awayTeam.totalStats.shots<br />
                @awayTeam.totalStats.shotsOnGoal<br />
                @awayTeam.totalStats.saves<br />
                @awayTeam.totalStats.corners<br />
                @awayTeam.totalStats.offsides<br />
                @awayTeam.totalStats.fouls<br />
                @awayTeam.playerTotals.yellowCards<br />
                @awayTeam.playerTotals.redCards
            </td>
        </tr>
    </tbody>
</table>
<table align="center" style="float:left;width:30%">
    <tr>
        <th style="float:right;text-align:right">
            @foreach (var item in Model.PlayByPlay.Periods.SelectMany(x => x.PlayStats).Where(x => !string.IsNullOrEmpty(x.VisitorText)))
            {
                <p style="text-align:right">
                    @{
                        var itemTime = string.Empty;
                        var timeSplit = item.Time.Split(':');
                        if (timeSplit[0] != "00")
                        {
                            itemTime = $"{timeSplit[0].TrimStart('0')}:{timeSplit[1]}";
                            if (itemTime.Split(':')[1] != "00")
                                itemTime = (int.Parse(itemTime.Split(':')[0]) + 1).ToString() + "'";
                            else
                                itemTime = itemTime.Split(':')[0] + "'";
                        }
                        else
                        {
                            itemTime = "1'";
                        }
                        var playerName = item.VisitorText.Split("by").Last();
                        if (item.VisitorText.Contains("Goal ("))
                        {
                            @(playerName) <i class='fas fa-futbol' style="color:lawngreen"></i> @(itemTime)
                        }
                        else if (item.VisitorText.Contains("Cardyellow("))
                        {
                            @(playerName) <i class='fas fa-square' style="color:yellow"></i> @(itemTime)
                        }
                        else if (item.VisitorText.Contains("Cardred("))
                        {
                            @(playerName) <i class='fas fa-square' style="color:red"></i> @(itemTime)
                        }
                    }
                </p>
            }
        </th>
    </tr>
</table>